name: Deploy resources EKS

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get credentials
        run: aws eks --region ${AWS_REGION} update-kubeconfig --name djiby-eks-cluster

      - name: Get AWS Account ID
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV

      - name: Replace Variable in hasher.yaml
        run: |
          cd ./k8s
          sed -i "s|var.IMAGE_ID|$AWS_ACCOUNT_ID|g" hasher.yaml
          sed -i "s|var.IMAGE_ID|$AWS_ACCOUNT_ID|g" rng.yaml
          sed -i "s|var.IMAGE_ID|$AWS_ACCOUNT_ID|g" worker.yaml
          sed -i "s|var.IMAGE_ID|$AWS_ACCOUNT_ID|g" webui.yaml
        
      - name: Deploy to Kubernetes
        run: |
          cd ./k8s
          kubectl apply -f hasher.yaml
          kubectl create namespace teoschool
          kubectl apply -f redis.yaml
          kubectl apply -f hasher.yaml
          kubectl apply -f rng.yaml
          kubectl apply -f worker.yaml
          kubectl apply -f webui.yaml
          kubectl apply -f svc-hasher.yaml
          kubectl apply -f svc-rng.yaml
          kubectl apply -f svc-redis.yaml
          kubectl apply -f svc-webui.yaml
        
      - name: Pause for 5 seconds
        run: |
          sleep 5
        shell: bash
        
      - name: Get LoadBalancer IP
        id: webui
        run: |
          cd ./k8s
          WEBUI_IP=$(aws elbv2 describe-load-balancers --query 'LoadBalancers[?contains(LoadBalancerName, `webui`)].DNSName' --output text)
          echo "L'adresse IP du service WebUI est : $WEBUI_IP"
          kubectl get deploy -n teoschool
          kubectl get svc -n teoschool
        shell: bash
      
