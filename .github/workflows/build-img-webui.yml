name: Build and Push Image WebUI

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      
      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: <votre-rÃ©gion-AWS>

      - name: Build and Push Docker Image
        run: |
          cd ./webui
          IMAGE_NAME=img_webui
          IMAGE_TAG=v1.0.0
          ECR_NAME=crdjiby
          ECR_LOGIN_SERVER=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

          # Build the Docker image
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

          # Tag the Docker image
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

          # Login to ECR
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin $ECR_LOGIN_SERVER

          # Push the Docker image to ECR
          docker push $ECR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

      - name: Scan Docker Image with Trivy
        run: |
          cd ./webui
          IMAGE_NAME=img_webui
          IMAGE_TAG=v1.0.0
          trivy image $IMAGE_NAME:$IMAGE_TAG > $IMAGE_NAME:$IMAGE_TAG.txt
          cat $IMAGE_NAME:$IMAGE_TAG.txt
        continue-on-error: true